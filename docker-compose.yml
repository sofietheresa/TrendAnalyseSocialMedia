version: "3.8"

services:
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./api:/app/api
      - ./scheduler:/app/scheduler
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - .env
    ports:
      - "8080:10000"  # Falls du FastAPI lokal testen willst
    container_name: trend_scheduler
    restart: unless-stopped
    depends_on:
      - qdrant

  scraper-trigger:
    build:
      context: .
      dockerfile: Dockerfile
    command: python scheduler/scraper_trigger.py
    env_file:
      - .env
    depends_on:
      - scheduler
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage

  api:
    build: .
    expose:
      - "8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=https://deine-domain.de
    depends_on:
      - api
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
